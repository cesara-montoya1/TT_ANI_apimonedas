pipeline {
    agent any

    environment {
        CONTAINER_IMAGE = 'cesaramontoya1/monedas-api:latest'
        KUBE_CONFIG = credentials('Kubernetes')
    }

    stages {
        stage('Compile app and build image') {
            steps {
                sh "podman build -t ${CONTAINER_IMAGE} ."
            }
        }

        stage('Clear manifests and apply new ones') {
            steps {
                script {
                    sh """
                    kubectl delete hpa monedas-api-hpa --ignore-not-found
                    kubectl delete deployment monedas-api-deployment --ignore-not-found
                    kubectl delete service monedas-api-service --ignore-not-found
                    kubectl delete configmap monedas-api-cm --ignore-not-found
                    """
                }
            }
        }

        stage('Register image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'DockerHub', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD',)]) {
                    sh """
                    echo \"$DOCKER_PASSWORD\" | podman login docker.io -u \"$DOCKER_USERNAME\" --password-stdin
                    podman push ${CONTAINER_IMAGE}
                    podman logout docker.io
                    """
                }
            }
        }

        stage('Apply manifests') {
            steps {
                sh "kubectl apply -f _manifiestos/api"
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    sh """
                    kubectl set image deployment/monedas-api-deployment ${CONTAINER_IMAGE} --record
                    kubectl rollout status deployment/monedas-api-deployment
                    """
                }
            }
        }
    }
}
